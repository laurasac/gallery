version: "3.8"

networks:
  gallery-network:

services:
  api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: gallery-api
    environment:
      POSTGRES_USER : ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      API_PORT: ${API_PORT}
      API_HOST: ${API_HOST}
      SECRET_JWT: ${SECRET_JWT}
      HASH_IMAGE: ${HASH_IMAGE}
      HASH_PASSWORD: ${HASH_PASSWORD}
    ports:
      - ${API_PORT}:${API_PORT}

    networks: 
      gallery-network:
        aliases:
          - ${API_HOST}

    depends_on:
      db:
        condition: service_healthy
    links:
      - db
  db:
    container_name: gallery-db
    image: library/postgres:11.9-alpine
    restart: always
    environment:
      POSTGRES_USER : ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    
    volumes:
      - apidata:/home/node/app
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} "]
      interval: 5s
      timeout: 5s
      retries: 5

    networks:
      gallery-network:
        aliases:
          - ${POSTGRES_HOST}

volumes:
  apidata: